# Streamlit Secrets Configuration Example
# Copy this file to secrets.toml (without .example) and configure as needed

# ============================================================
# ONLINE RETRAINING CONFIGURATION
# ============================================================

# Enable online model retraining after every 5 patient entries
# WARNING: This may cause instability on Streamlit Cloud due to memory constraints
# 
# Options:
#   "true"  = Enable online retraining (risky on cloud)
#   "false" = Disable online retraining (stable, recommended)
#
# Default: false

ENABLE_RETRAINING = "false"

# ============================================================
# RECOMMENDED SETTINGS
# ============================================================

# For Clinical Trials on Streamlit Cloud:
#   ENABLE_RETRAINING = "false"
#   - Stable, no crashes
#   - Data collection continues
#   - Retrain offline periodically
#
# For Local Development/Testing:
#   ENABLE_RETRAINING = "true"
#   - Test retraining functionality
#   - Monitor memory usage
#   - Requires adequate RAM (4GB+)

# ============================================================
# ENABLING ONLINE RETRAINING ON STREAMLIT CLOUD
# ============================================================

# To enable online retraining on Streamlit Cloud:
#
# 1. Go to your app dashboard on share.streamlit.io
# 2. Click "Settings" > "Secrets"
# 3. Add the following line:
#
#    ENABLE_RETRAINING = "true"
#
# 4. Save and redeploy
#
# CAUTION: Monitor your app for stability issues!
# If crashes occur, immediately set back to "false"

# ============================================================
# MEMORY OPTIMIZATIONS APPLIED
# ============================================================

# The app now includes:
# - Reduced timesteps: 200 (instead of 1000)
# - Aggressive garbage collection
# - PyTorch cache clearing
# - Environment cleanup after each training
# - Error recovery with memory cleanup
#
# These optimizations improve stability but don't eliminate
# all risk of crashes on memory-constrained environments.
